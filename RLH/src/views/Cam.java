/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/*import javax.swing.JOptionPane;
import org.bytedeco.javacv.CanvasFrame;
import org.bytedeco.javacv.Frame;
import org.bytedeco.javacv.FrameGrabber;
import org.bytedeco.javacv.OpenCVFrameConverter;
import org.bytedeco.javacv.VideoInputFrameGrabber;*/

/*import javax.swing.*;
import java.awt.*;
import java.io.File;
import java.io.IOException;*/

/**
 *
 * @author juancarloscastillocarrillo
 */
public class Cam extends javax.swing.JFrame {

    /*private CanvasFrame canvas;
    private FrameGrabber grabber;
    private OpenCVFrameConverter.ToIplImage converter;*/
    
    
    int largoCamara = 320;
    int anchoCamara = 240;
    
    Dimension dimension = new Dimension(largoCamara, anchoCamara);
    Dimension dimension1 = WebcamResolution.VGA.getSize();
    //Dimension dimension1 = WebcamResolution.HD720.getSize();
    Webcam webcam;
    WebcamPanel webcamPanel;
    
    BufferedImage ruta;
    int contador = 0;
    
    public Cam() {
        initComponents();
        //initCamera();
        //System.out.println(Webcam.getDefault());
        
        webcam = Webcam.getDefault();
        
        if(webcam != null) {
            webcamPanel = new WebcamPanel(webcam, dimension, false);
            webcam.setViewSize(dimension1);
            webcamPanel.setFillArea(true);
            panelCamara.setLayout(new FlowLayout());
            panelCamara.add(webcamPanel);

            nameCamara.setText(webcam.toString());
        } else {
            nameCamara.setText("no hay camara");
        }
        //webcamPanel = new WebcamPanel(webcam, dimension, false);
        /*System.out.println(webcam.);*/
        
        /*webcam.setViewSize(dimension1);
        webcamPanel.setFillArea(true);
        panelCamara.setLayout(new FlowLayout());
        panelCamara.add(webcamPanel);
        
        nameCamara.setText(webcam.toString());*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameCamara = new javax.swing.JLabel();
        startCamara = new javax.swing.JButton();
        panelCamara = new javax.swing.JPanel();
        stopCamara = new javax.swing.JButton();
        tomarFoto = new javax.swing.JButton();
        saveFoto = new javax.swing.JButton();
        labelFoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameCamara.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameCamara.setText("name");

        startCamara.setText("Iniciar");
        startCamara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startCamaraActionPerformed(evt);
            }
        });

        panelCamara.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout panelCamaraLayout = new javax.swing.GroupLayout(panelCamara);
        panelCamara.setLayout(panelCamaraLayout);
        panelCamaraLayout.setHorizontalGroup(
            panelCamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
        );
        panelCamaraLayout.setVerticalGroup(
            panelCamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        stopCamara.setText("Apagar");
        stopCamara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopCamaraActionPerformed(evt);
            }
        });

        tomarFoto.setText("Tomar foto");
        tomarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tomarFotoActionPerformed(evt);
            }
        });

        saveFoto.setText("Guardar foto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameCamara, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startCamara, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stopCamara, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tomarFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelCamara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelCamara, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameCamara)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startCamara)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopCamara)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tomarFoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveFoto)))
                .addGap(128, 128, 128))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void startCamaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startCamaraActionPerformed
        Thread hilo = new Thread() {
            @Override
            public void run() {
                webcamPanel.start();
            }
        };
        
        hilo.setDaemon(true);
        hilo.start();
    }//GEN-LAST:event_startCamaraActionPerformed

    private void stopCamaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopCamaraActionPerformed
        webcamPanel.stop();
    }//GEN-LAST:event_stopCamaraActionPerformed

    private void tomarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tomarFotoActionPerformed
        ImageIcon foto;
        foto = new ImageIcon(webcam.getImage());
        Icon iconoFoto = new ImageIcon(foto.getImage().getScaledInstance(labelFoto.getWidth(), labelFoto.getHeight(), Image.SCALE_SMOOTH));
        labelFoto.setIcon(iconoFoto);
        
        ruta = webcam.getImage();
    }//GEN-LAST:event_tomarFotoActionPerformed

    /*private void initCamera() {
        try {
            grabber = new VideoInputFrameGrabber(0); // 0 means default camera
            grabber.start();
            converter = new OpenCVFrameConverter.ToIplImage();
            canvas = new CanvasFrame("Camera", CanvasFrame.getDefaultGamma() / grabber.getGamma());

            // Try to grab a frame to check if the camera is available
            Frame frame = grabber.grab();
            if (frame == null) {
                cameraStatusLabel.setText("Camera Status: No camera detected.");
                grabber.stop();
            } else {
                cameraStatusLabel.setText("Camera Status: Camera detected.");
                startCamera();
            }
        } catch (FrameGrabber.Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error initializing the camera.");
        }
    }
    
    private void startCamera() {
        new Thread(() -> {
            while (canvas.isVisible()) {
                try {
                    Frame frame = grabber.grab();
                    if (frame != null) {
                        canvas.showImage(frame);
                    }
                } catch (FrameGrabber.Exception e) {
                    e.printStackTrace();
                }
            }
        }).start();
    }*/
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelFoto;
    private javax.swing.JLabel nameCamara;
    private javax.swing.JPanel panelCamara;
    private javax.swing.JButton saveFoto;
    private javax.swing.JButton startCamara;
    private javax.swing.JButton stopCamara;
    private javax.swing.JButton tomarFoto;
    // End of variables declaration//GEN-END:variables
}
